/*
 * Competence Repository
 * The API description of the Competence Repository.
 *
 * OpenAPI spec version: 0.3.2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {CompetenceDto} from './CompetenceDto';
import {ResolvedUeberCompetenceDto} from './ResolvedUeberCompetenceDto';

/**
 * The ResolvedRepositoryDto model module.
 * @module model/ResolvedRepositoryDto
 * @version 0.3.2
 */
export class ResolvedRepositoryDto {
  /**
   * Constructs a new <code>ResolvedRepositoryDto</code>.
   * @alias module:model/ResolvedRepositoryDto
   * @class
   * @param id {String} 
   * @param competencies {Array.<module:model/CompetenceDto>} 
   * @param ueberCompetencies {Array.<module:model/ResolvedUeberCompetenceDto>} 
   * @param name {String} 
   */
  constructor(id, competencies, ueberCompetencies, name) {
    this.id = id;
    this.competencies = competencies;
    this.ueberCompetencies = ueberCompetencies;
    this.name = name;
  }

  /**
   * Constructs a <code>ResolvedRepositoryDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ResolvedRepositoryDto} obj Optional instance to populate.
   * @return {module:model/ResolvedRepositoryDto} The populated <code>ResolvedRepositoryDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ResolvedRepositoryDto();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('taxonomy'))
        obj.taxonomy = ApiClient.convertToType(data['taxonomy'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('competencies'))
        obj.competencies = ApiClient.convertToType(data['competencies'], [CompetenceDto]);
      if (data.hasOwnProperty('ueberCompetencies'))
        obj.ueberCompetencies = ApiClient.convertToType(data['ueberCompetencies'], [ResolvedUeberCompetenceDto]);
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('version'))
        obj.version = ApiClient.convertToType(data['version'], 'String');
    }
    return obj;
  }
}

/**
 * @member {String} id
 */
ResolvedRepositoryDto.prototype.id = undefined;

/**
 * @member {String} taxonomy
 */
ResolvedRepositoryDto.prototype.taxonomy = undefined;

/**
 * @member {String} description
 */
ResolvedRepositoryDto.prototype.description = undefined;

/**
 * @member {Array.<module:model/CompetenceDto>} competencies
 */
ResolvedRepositoryDto.prototype.competencies = undefined;

/**
 * @member {Array.<module:model/ResolvedUeberCompetenceDto>} ueberCompetencies
 */
ResolvedRepositoryDto.prototype.ueberCompetencies = undefined;

/**
 * @member {String} name
 */
ResolvedRepositoryDto.prototype.name = undefined;

/**
 * @member {String} version
 */
ResolvedRepositoryDto.prototype.version = undefined;

