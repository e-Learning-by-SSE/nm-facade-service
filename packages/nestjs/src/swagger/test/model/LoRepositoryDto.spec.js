/*
 * Competence Repository
 * The API description of the Competence Repository.
 *
 * OpenAPI spec version: 0.3.2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CompetenceRepositoryApi);
  }
}(this, function(expect, CompetenceRepositoryApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('LoRepositoryDto', function() {
      beforeEach(function() {
        instance = new CompetenceRepositoryApi.LoRepositoryDto();
      });

      it('should create an instance of LoRepositoryDto', function() {
        // TODO: update the code to test LoRepositoryDto
        expect(instance).to.be.a(CompetenceRepositoryApi.LoRepositoryDto);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

      it('should have the property owner (base name: "owner")', function() {
        // TODO: update the code to test the property owner
        expect(instance).to.have.property('owner');
        // expect(instance.owner).to.be(expectedValueLiteral);
      });

      it('should have the property description (base name: "description")', function() {
        // TODO: update the code to test the property description
        expect(instance).to.have.property('description');
        // expect(instance.description).to.be(expectedValueLiteral);
      });

      it('should have the property learningObjects (base name: "learningObjects")', function() {
        // TODO: update the code to test the property learningObjects
        expect(instance).to.have.property('learningObjects');
        // expect(instance.learningObjects).to.be(expectedValueLiteral);
      });

      it('should have the property learningObjectsGroups (base name: "learningObjectsGroups")', function() {
        // TODO: update the code to test the property learningObjectsGroups
        expect(instance).to.have.property('learningObjectsGroups');
        // expect(instance.learningObjectsGroups).to.be(expectedValueLiteral);
      });

      it('should have the property goals (base name: "goals")', function() {
        // TODO: update the code to test the property goals
        expect(instance).to.have.property('goals');
        // expect(instance.goals).to.be(expectedValueLiteral);
      });

    });
  });

}));
